from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from weather import get_weather_city, get_forecast
from config import WEATHER_EMOJI
from keyboards import get_forecast_keyboard


class WeatherState(StatesGroup):
    """–ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≥–æ–¥—ã FSM."""

    waiting_for_city = State()
    choosing_forecast_type = State()


async def start_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É:")
    await state.set_state(WeatherState.waiting_for_city)


async def weather_handler(message: types.Message, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–æ–≥–æ–¥—ã."""
    city_name = message.text
    weather_data = get_weather_city(city_name)
    if weather_data:
        await state.update_data(city=city_name)
        condition = weather_data["condition"].lower()
        emoji = WEATHER_EMOJI.get(condition, "üåç")
        response = (
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {weather_data['city']}, {weather_data['region']}, {weather_data['country']}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temperature']}¬∞C\n"
            f"‚òÅ –°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather_data['condition']} {emoji}"
        )
        keyboard = get_forecast_keyboard()
        await message.answer(response)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑:", reply_markup=keyboard)
        await state.set_state(WeatherState.choosing_forecast_type)
    else:
        await message.answer("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


async def forecast_handler(message: types.Message, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã."""
    user_data = await state.get_data()
    city = user_data.get("city")
    if not city:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        await state.set_state(WeatherState.waiting_for_city)
        return
    if message.text == "–ü–æ–≥–æ–¥–∞ –Ω–∞ –¥–µ–Ω—å":
        forecast = get_forecast(city, 1)
    elif message.text == "–ü–æ–≥–æ–¥–∞ –Ω–∞ 3 –¥–Ω—è":
        forecast = get_forecast(city, 3)
    elif message.text == "–ü–æ–≥–æ–¥–∞ –Ω–∞ 14 –¥–Ω–µ–π":
        forecast = get_forecast(city, 14)
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    await message.answer(forecast)
    await state.clear()
