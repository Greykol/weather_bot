from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

#from keyboards import weather_keyboard
from config import WEATHER_EMOJI
from weather import get_weather_city


class WeatherState(StatesGroup):
    waiting_for_city = State()


async def start_handler(message: Message):
    #keyboard = weather_keyboard()
    kb = KeyboardButton(text='–¢–µ—Å—Ç')
    keyboard = ReplyKeyboardMarkup(keyboard=[[kb]])
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /weather, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:', reaply_markup=keyboard)


async def weather_start_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
    await state.set_state(WeatherState.waiting_for_city)


async def weather_handler(message: Message, state: FSMContext):
    city_name = message.text
    weather_data = get_weather_city(city_name)

    if weather_data:
        condition = weather_data["condition"].lower()  # –î–µ–ª–∞–µ–º —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã
        emoji = WEATHER_EMOJI.get(condition, "üåç")
        response = (
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {weather_data['city']}, {weather_data['region']}, {weather_data['country']}\n"
            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temperature']}¬∞C\n"
            f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather_data['condition']} {emoji}\n"
            #f"–î–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏: ![Weather Icon](http://{weather_data['icon']})"
        )
    else:
        response = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."

    await message.answer(response, parse_mode="Markdown")
    await state.set_state()
